.extern div_10.o

.data
                        .align 2
DIRECCION_BASE:         .word 0x000000	@Es una direccion
DIRECCION_LOGICA:       .word 0x000000  @Es una direccion


.text
.globl prog_gpio
.globl valor_gpio
.globl leeValor_gpio
.globl progEv_gpio
.globl leeEv_gpio
.globl clearEv_gpio

prog_gpio:
    STMDB  SP!,{R4-R7, LR}
    MOV R4,R0	        	@Muevo el pin a registro seguro
    MOV R5,R1	                @Muevo booleano a registro seguro
    MOV R0,#13		        @13 (funcion)
    LDR R1,=0X20200000
    LDR R2,=DIRECCION_BASE
    STR R1,[R2]
    MOV R2,#0x100		@Tamano del bloque de la memoria
    SWI 0x68                    @OS_Memory
    LDR R0,= DIRECCION_LOGICA   @Cargo la direccion de DIRECCION_LOGICA
    STR R3,[R0]		       @Almaceno la direccion logica que me ha  retornado


@Ahora hay que calcular el offset y el numero con el realizo la mascara del BIC
@Llamo a div_10 para saber el offset(cada bucle sumo 0x04)

    MOV R0,R4             @Paso el pin a R0 para poder operar con el en div_10
    BL div_10             @Llamada a la funcion
    MOV R2,#4             @Offset = 0x04
    MUL R0,R2,R0          @Offset a sumar al GPFSEL
    MOV R2,#3             @pines que hay que modificar
    MUL R1,R2,R1          @Desplazamiento en los bits del GPFSEL
    MOV R6, #7            @Mascara para el BIC
    LSL R6,R6,R1          @Desplazo la Mascara
    SWI 0x16	          @entro en modo supervisor
    LDR R3,=DIRECCION_LOGICA
    LDR R3,[R3]           @Cargo en el registro el contenido la DIRECCION_LOGICA
    LDR R7,[R3,R0]        @Cargo en R7 el contenido de la DIRECCION_LOGICA con el Desplazamiento del offset

 @ANHADIR PUNTO DE RUPTURA PARA VER SI EL OFFSET ES CORRECTO

    BIC R7,R7,R6          @BIC con la direccion desplazada y la m√°scara
    LSL R5,R5,R1          @En caso de que sea salida pongo a 0
    ORR R7,R5,R7
    STR R7,[R3,R0]        @Almaceno el resultado del BIC en la DIRECCION_LOG
    SWI 0x7C               @Abandono el modo supervisor

    LDMIA SP!, {R4-R7,PC}

@--------X-----------X-----------X-----------X---------X----------X------X

valor_gpio:

    STMDB  SP!,{R4-R6, LR}
		MOV R5,R0		@Muevo el pin a registro seguro
		MOV R6,R1		@Muevo booleano a registro seguro

                CMP R6,#0               @Miro si quiero poner a 0 (CLR)
                BEQ GPCLR
GPSET:          CMP R5,#32              @elijo el offset en funcion del pin
                MOVLT R6,#0x01C
                MOVGE R6,#0x020
                B VALOR
GPCLR:          CMP R5,#32             @si quiero poner a 1 (SET)
                MOVLT R6,#0x028        @elijo el offset si en funcion del pin
                MOVGE R6,#0x02C
VALOR:          LDR R4,=DIRECCION_LOGICA
                LDR R4,[R4]            @Cargo la direccion base
                ADD R4,R4,R6           @Le sumo el offset a la direccion base
                MOV R6,#1
                LSL R6,R6,R5        @LSL con 1 para colocarle en el bit del pin
		SWI 0x16            @entro en modo supervisor
                STR R6,[R4]         @Almaceno el valor del pin
                SWI 0x7C            @Abandono el modo supervisor
                LDMIA SP!, {R4-R6,PC}
@--------X-----------X-----------X-----------X---------X----------X------X

leeValor_gpio: STMDB  SP!,{R4-R11, LR}
@Siempre va a ser GPLEV 0, ya que no hay pines suficientes

               MOV R5,R0                 @Almaceno el pin  GPIO en reg. seg.
               MOV R6,#0x034             @Offset a sumar
               LDR R4,=DIRECCION_LOGICA
               LDR R4,[R4]            @Cargo la direccion base
               ADD R4,R4,R6           @Le sumo el offset a la direccion base
	       SWI 0x16            @entro en modo supervisor
               LDR R6,[R4]         @Leo el valor del GPLEV
               SWI 0x7C            @Abandono el modo supervisor
               LSR R5,R6,R5  @Pongo el bit del pin en el bit menos significativo

               MOV R6,#0xFFFFFFFE
               BIC R5,R5,R6
               MOV R0,R5
               LDMIA SP!, {R4-R11,PC}


@--------X-----------X-----------X-----------X---------X----------X------X
progEv_gpio:

        STMDB SP!,{R4-R9, LR}
        MOV R4, R0        @paso el pin a registro seguro
        MOV R5,R1         @paso al registro seguro el valor del evento
        LDR R0,=DIRECCION_LOGICA
        LDR R0,[R0]       @cargo la direccion logica


       SWI 0x16     @entro en modo supervisor
       CMP R5, #0
       BNE GPFEN0
       ADD R1,R0,#0x4C   @hallo la direccion del GPREN0
       B FIN

GPFEN0:ADD R1,R0, #0x58  @hallo la direccion del GPFEN0

FIN:  MOV R0, #0x1       @cargo la mascara en r0
      LSL R0,R0,R4       @desplazo la mascara hasta el pin dado
      MOV R2,R0
      LDR R0,[R1]
      ORR R0,R0,R2       @mascara en el GPFEN
      STR R0,[R1]
      SWI 0x7C

      LDMIA SP!,{R4-R9,PC}
@--------X-----------X-----------X-----------X---------X----------X------X

leeEv_gpio:

      @comprobacion de que se ha producido el flanco (GPEDS 0)

      STMDB SP!, {R4-R9,LR}
      MOV R4,R0         @paso el pin a un registro seguro
      MOV R1, #0x40     @Offset GPEDS
      LDR R0,=DIRECCION_LOGICA
      LDR R0,[R0]       @cargo la DIRECCION_LOGICA

      ADD R1,R0,R1    @Calculo la direccion del GPEDS
      MOV R2,#0x1     @almaceno la mascara en R2
      SWI 0x16        @Entro en modo supervisor
      LDR R0,[R1]     @cargo en R0 el contenido de GPEDS +offset
      LSR R0,R0,R4    @Desplazo el contenido hasta el pin
      AND R0,R0,R2    @aplico mascara (resultado 0/1)
      SWI 0x7C        @Salgo del modo supervisor
      LDMIA SP!, {R4-R9, PC}



@--------X-----------X-----------X-----------X---------X----------X------X

clearEv_gpio:

      STMDB SP!, {R4-R9,LR}
      MOV R4,R0               @almaceno el pin en registro seguro
      MOV R1, #0x40           @guardo el offset del GPEDS0
      LDR R0, =DIRECCION_LOGICA
      LDR R0,[R0]             @cargo la direccion logica

      SWI 0x16          @entro en modo supervisor
      ADD R1,R0, R1     @direccion efectiva(DIR_LOGICA+GPEDS)
      MOV R2,#0x1
      LSL R2,R2,R4      @mascara desplazada tantos bits como el numero del pin
      LDR R0,[R1]
      BIC R2,R0,R2
      STR R2,[R1]       @Almaceno en GPEDS


      SWI 0x7C
      LDMIA SP!, {R4-R9, PC}

