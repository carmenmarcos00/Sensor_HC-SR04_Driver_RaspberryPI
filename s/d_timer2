.data
                        .align 2
DIRECCION_BASE:         .word 0x000000	@Es una direccion
DIRECCION_LOGICA:       .word 0x000000  @Es una direccion
MODO:                   .word 0x0       @vale 0 si estaba en mod sup

.text

.globl Ini_timer
.globl Timer_Act

Ini_timer:

    STMDB  SP!,{R4-R11, LR}
    MOV R0,#13		        @13 (funcion)
    LDR R1,=0X20003000		@physical base adress System Timer
    LDR R2,=DIRECCION_BASE
    STR R1,[R2]
    MOV R2,#0x100		@Tamano del bloque de la memoria

    SWI 0x68                    @OS_Memory


    LDR R0,= DIRECCION_LOGICA   @Cargo la direccion de DIRECCION_LOGICA
    STR R3,[R0]		        @Almaceno la direccion logica retornada

    LDMIA SP!, {R4-R11, PC}


Timer_Act:

     STMDB  SP!,{R4-R7, LR}

     LDR R4,=DIRECCION_LOGICA	@Puntero a direccion logica
     LDR R4,[R4]		@Direccion logica
     LDR R5,=0x04		@Offset Lower32
     LDR R6,=0x08		@Offset Higher32

    MRS R10, CPSR               @Guardo en R10 el valor del CPSR
    AND R10,R10,#31             @And para quedarme solo con los 5 bms
    LDR R11,=10011
    CMP R10,R11              @Lo comparo con el valor del supervisor
    BEQ SUP

    @COMO NO ESTABA EN SUPERVISOR GUARDO EN VAR UN 1

    MOV R5,#1
    LDR R4,=MODO
    STR R5,[R4]                 @Guardo un 1


     SWI 0x16			@entro en modo supervisor
SUP: LDR R0,[R4,R5]		@valor Lower32
     LDR R1,[R4,R6]		@valor Higher32


     LDR R7,=MODO
     LDR R7,[R7]
     CMP R7,#0
     BEQ FIN

     SWI 0x7C			@abandono el modo supervisor

FIN: LDMIA SP!, {R4-R7, PC}


