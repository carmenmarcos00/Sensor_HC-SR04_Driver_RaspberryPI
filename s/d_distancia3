.extern prog_gpio
.extern valor_gpio
.extern leeValor_gpio
.extern Ini_Timer
.extern Timer_Act

.extern progEv_gpio
.extern leeEv_gpio
.extern clearEv_gpio

.data

VAR:    .word 0
INST:   .word 0x00000000
DIST:   .word 0


.text

.globl Mide_dist
.globl Ini_dist


Ini_dist:

	STMDB SP!,{R4-R7,LR}
	MOV R0,#2
	MOV R1,#1
	BL prog_gpio		@programo el pin de trig

	MOV R0,#3
	MOV R1,#0
	BL prog_gpio		@programo el pin del echo


        MOV R0,#52              @Activacion de la gestion linea 52
        MOV R1,#RUTINA
        MOV R2,#0
        MOV R3,#0
        MOV R4,#0
        SWI 0x4B                @OS_ClaimDeviceVector

        LDR R0,=0x2000B200      @Quitar mascara en el controlador de int.
        LDR R0,[R0]
        MOV R1,#0x80000
        SWI 0x16               @Entro en modo sup
        STR R1, [R0, #0x14]
        SWI 0x7C               @Salgo del modo sup

	LDMIA SP!,{R4-R7,PC}


Mide_dist:

	STMDB SP!,{R4-R7,LR}

	MOV R0,#2
	MOV R1,#1
	BL valor_gpio		@salida a 1 del trig

				@Nunca pongo echo a 1, miro si esta a 1 y mido
				@703 instruc----1 micro
				@x   instruc----16 micro

	LDR R0,=3		@Veces que realizo el bucle
	                        @en depuracion 1, 6000 ejecucion
BUCLE:	subs R0,R0,#1		@Decremento el bucle
	bne BUCLE		@condición de salida

	MOV R0,#2
	MOV R1,#0
	BL valor_gpio		@salida a 0 del trig


	LDR R4,=100000		@condicion de salida del bucle
FLANCO:	MOV R0,#3		@valor del pin echo
	BL leeValor_gpio	@consulto el valor de dicho pin
	CMP R0,#1		@comparo el valor del pin con 1
	BEQ TIMER		@si es 1 empiezo a contar
	SUB R4,R4,#1		@si no le resto a la condicion de salida
	CMP R4,#0		@comparo la condicion de salida
	BEQ FIN			@si la condicion de salida es 0 acabo
	B FLANCO		@si no se cumple vuelvo a leer valor


TIMER:
        MOV R0,#3               @pin del echo
        MOV R1,#1               @flanco descendente
        BL progEv_gpio          @programo para que detecte flancos
        BL Ini_timer		@inicializo el timer
	BL Timer_Act		@me devuelve el valor del timer
	MOV R5,R0		@Guardo el valor del timer EN R5

@A partir de aqui estan los cambios para detectar con flancos

        MOV R4,#0
FLAN2:
        @Cuento las instrucciones hasta que salte a la rutina
        LDR R0,=VAR
        LDR R0,[R0]
        CMP R0, #0
        BNE FIN
        ADD R4,R4,#5            @instrucciones por cada ejecucion de bucle

	B  FLAN2

RUTINA: BL Timer_Act            @leo el System Timer

	SUB R5,R0,R5		@calculo la diferencia de tiempo
	LDR R6,=11246
	MUL R5,R6,R5
	LSR R5,R5,#16		@distancia en hexa

        LDR R0,=VAR             @Dir de var
        MOV R1,#1
        STR R1,[R0]             @almaceno un 1 en la variable VAR

        MOV R3,#3               @elimino pet de interrupciones
        BL clearEv_gpio         @limpio el valor de GPEDS

        LDR R0,=INST            @dir de INST
        STR R4,[R0]             @almaceno el contenido de r4
        LDR R0,=DIST            @dir de DIST
        STR R5,[R0]             @almaceno el contenido de la distancia

	MOV PC, LR

FIN:


        LDR R0,=DIST
        LDR R0,[R0]

	LDMIA SP!,{R4-R7,PC}
